name: Macos build

on:
  workflow_dispatch:
  push:
  pull_request:
  # schedule:
  #   - cron: '01 01 * * 6'    # Run every Saturday

jobs:
  build:

    runs-on: macos-latest

    strategy:
      matrix:
        perl:
          - '5.40'
          - '5.38'
          - '5.36'
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
          - '5.26'
          - '5.24'
          - '5.22'
          - '5.20'
          - '5.18'
          - '5.16'
          - '5.14'
          - '5.12'
          - '5.10'
          - '5.8'

    name: Perl ${{ matrix.perl }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl }}

    - name: Perl version
      run: perl -V

    - name: Install dependencies
      run: cpanm --quiet --installdeps --notest .

    - name: Install Berkeley DB
      run: brew install berkeley-db

    - name: Build
      run: perl Makefile.PL && make

    - name: Test
      run: make test


  werror:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        perl:
          - latest

        compiler:
          - name: clang
            werror: -Werror

          - name: clang++
            werror: -Werror -Wno-error=deprecated

    name: Perl ${{ matrix.perl }} with ${{ matrix.compiler.name }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: ${{ matrix.perl }}

    - name: Perl version
      run: perl -V

    - name: Install DB
      run: sudo apt-get install libdb-dev

    - name: Install Perl dependencies
      run: cpanm --quiet --installdeps --notest .

    # Need the -Wno-error=deprecated below to stop this terminating the workflow
    #
    # clang: error: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated [-Werror,-Wdeprecated]

    - name: Build
      run: |
        flags=$( perl -MConfig -e 'print $Config::Config{ccflags}' )
        perl Makefile.PL CCFLAGS="$flags ${{ matrix.compiler.werror }}" CC=${{ matrix.compiler.name }} && make

    - name: Test
      run: make test
